on: [push]

jobs:
  build-in-bash:
    strategy:
      # Continue build even if some platforms fail.
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            arch: arm64
          - os: ubuntu-latest
            arch: x64
          - os: windows-latest
            arch: x64   
    runs-on: ${{ matrix.os }}
    name: Build in Bash
    steps:
      - uses: actions/checkout@v4
      - uses: radekm/setup-c3@v2
        with:
          version: v0.6.5
      - if: runner.os == 'Linux'
        name: Install Linux Dependencies
        run: |
          sudo apt update
          sudo apt install libglu1-mesa-dev mesa-common-dev xorg-dev libasound-dev
      - shell: bash
        run: |
          ./build-libs.sh
          ./build-example.sh
          ls -l build
  build-in-cmd:
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: x64
    runs-on: ${{ matrix.os }}
    name: Build in cmd
    steps:
      - uses: actions/checkout@v4
      - uses: radekm/setup-c3@v2
        with:
          version: v0.6.5
      - shell: cmd
        run: |
          md build\libs
          cd build\libs
          cmake ..\..\libs
          cmake --build . --config Release

          cd ..
          c3c compile -O1 -L libs --libdir .. --lib sokol --lib imgui ..\example\main.c3 -o example
          dir
